<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>afronski.pl - Tag: continuous integration</title>
    <description>Random thoughts from top of my head - afronski.pl</description>
    <link>http://www.afronski.pl</link>
    <atom:link href="http://www.afronski.pl/tag/continuous integration/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Jenkins 2.0</title>
        <description>&lt;h1 id=&quot;jenkins-20&quot;&gt;Jenkins 2.0&lt;/h1&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Recently maintainers of &lt;em&gt;Jenkins&lt;/em&gt; - the leading and most popular open source automation server - announced that long awaited version &lt;em&gt;2.0&lt;/em&gt; &lt;a href=&quot;https://jenkins.io/2.0/&quot;&gt;is available to download and additionally it is marked as a beta release&lt;/a&gt;. It means that they’re still recommending current &lt;em&gt;LTS&lt;/em&gt; version for a production deployments, but new version is coming really soon.&lt;/p&gt;

&lt;p&gt;So let’s look what it offers!&lt;/p&gt;

&lt;h2 id=&quot;whats-new&quot;&gt;What’s new?&lt;/h2&gt;

&lt;h3 id=&quot;improved-usability-aka-new-ui&quot;&gt;Improved usability (aka “New UI”)&lt;/h3&gt;

&lt;p&gt;That is probably the most single awaited feature in Jenkins community. It means a lot for both, power users and newcomers. A lot of feedback was taken into account when preparing that feature. Old pages (e.g. &lt;em&gt;Create Item&lt;/em&gt; or &lt;em&gt;Job Configuration&lt;/em&gt;) look really clean and modern (we finally have tabs in &lt;em&gt;Job Configuration&lt;/em&gt; page), new views like &lt;em&gt;Pipeline Stage view&lt;/em&gt; (we will describe whole feature in the next section) look even more awesome:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Jenkins2PipelineStageView.png&quot; alt=&quot;Jenkins 2.0 - Pipeline Stage view&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But that’s not the end of goodies from that release.&lt;/p&gt;

&lt;h3 id=&quot;delivery-pipelines&quot;&gt;Delivery pipelines&lt;/h3&gt;

&lt;p&gt;Finally Jenkins will be packaged with built-in delivery pipelines feature. It means that it will not require anymore plugins for doing that. It brings finally support for &lt;code&gt;Jenkinsfile&lt;/code&gt; - concept which allows to codify your pipelines, and store it inside version control (either together with application source code or outside, in one of your supporting repositories). Besides that - finally no more &lt;em&gt;XML&lt;/em&gt; fiddling when it comes to job configuration, because it will use a nice &lt;em&gt;DSL&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;url:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://github.com/joe_user/simple-maven-project-with-tests.git&amp;#39;&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mvnHome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tool&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;M3&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;${mvnHome}/bin/mvn -B -Dmaven.test.failure.ignore verify&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ArtifactArchiver&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;artifacts:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;**/target/*.jar&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;fingerprint:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;JUnitResultArchiver&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;testResults:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;**/target/surefire-reports/TEST-*.xml&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That is a well known concept, similar to the &lt;a href=&quot;https://github.com/jenkinsci/job-dsl-plugin&quot;&gt;&lt;em&gt;job DSL&lt;/em&gt; plugin&lt;/a&gt;. But finally, it will be built-in and ready to use right after installation, without any additional effort.&lt;/p&gt;

&lt;h3 id=&quot;full-backward-compatibility&quot;&gt;Full backward compatibility&lt;/h3&gt;

&lt;p&gt;That is the most important thing - adding new stuff and improvements in UI means a lot for new users, but having those things and being fully backward compatible is a huge deal for people that are using &lt;em&gt;Jenkins&lt;/em&gt; in production right now. As documentation states:&lt;/p&gt;

&lt;quote class=&quot;citation&quot;&gt;Jenkins 2.0 is a drop-in replacement of the Jenkins 1.x series of releases and fully backward compatible. There is practically no reason not to upgrade once 2.0 is released.&lt;/quote&gt;

&lt;p&gt;If that goal will be achieved, it is a huge thing.&lt;/p&gt;

&lt;h2 id=&quot;how-to-play-with-it&quot;&gt;How to play with it?&lt;/h2&gt;

&lt;p&gt;The easiest way to play with new Jenkins, will be to use prepared packages from the &lt;a href=&quot;https://jenkins.io/2.0/&quot;&gt;aforementioned page&lt;/a&gt;. Maintainers prepared installers for almost all platforms. Of course there is also a standard &lt;em&gt;&lt;code&gt;WAR&lt;/code&gt;&lt;/em&gt; distribution available there.&lt;/p&gt;

&lt;p&gt;But there is even a simpler way to play with it for a Linux user. If you already have &lt;code&gt;docker&lt;/code&gt; configured, you can spin it up with one command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run --name jenkins2 -p 8080:8080 -d jenkinsci/jenkins:2.0-beta-1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that’s it! When that command will finish, on your local &lt;code&gt;8080&lt;/code&gt; port there will be &lt;em&gt;Jenkins 2.0&lt;/em&gt; waiting for you to configure and play with it.
And last but not least - if you have any feedback related with new version, official page &lt;a href=&quot;https://jenkins.io/2.0/#feedback&quot;&gt;contains guides how to do it&lt;/a&gt;. Community will be grateful!&lt;/p&gt;

&lt;h2 id=&quot;credits&quot;&gt;Credits&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jenkins.io/2.0/&quot;&gt;Jenkins 2.0 - Official Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jenkins.io/2.0/#feedback&quot;&gt;Jenkins 2.0 - Feedback&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jenkinsci/job-dsl-plugin&quot;&gt;jenkinsci/job-dsl-plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 03 Apr 2016 17:30:00 +0200</pubDate>
        <link>http://www.afronski.pl/2016/04/03/jenkins-2-0.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2016/04/03/jenkins-2-0.html</guid>
      </item>
    
  </channel>
</rss>
