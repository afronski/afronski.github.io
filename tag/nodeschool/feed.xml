<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>afronski.pl - Tag: nodeschool</title>
    <description>Random thoughts from top of my head - afronski.pl</description>
    <link>http://www.afronski.pl</link>
    <atom:link href="http://www.afronski.pl/tag/nodeschool/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>And you? What are you doing for the community?</title>
        <description>&lt;h1 id=&quot;and-you-what-are-you-doing-for-the-community&quot;&gt;And you? What are you doing for the community?&lt;/h1&gt;

&lt;p&gt;During one of the endless &lt;em&gt;flame wars&lt;/em&gt;, somewhere over Twitter, one idea hit my mind - it is surprising how much time we spent on so many trivial and fiddling stuff. And moreover, what could happen if instead of &lt;em&gt;flame war&lt;/em&gt;, we spent this time actually doing something for our community. Whether the world would not be a better place?&lt;/p&gt;

&lt;p&gt;If we will try to count how many hours we spent unproductively by reading this &lt;em&gt;bullshit&lt;/em&gt; or even worse - &lt;em&gt;participating in it&lt;/em&gt; (I’m not talking about rest, holidays and spare time - that is a different thing, you should rest, &lt;em&gt;your Github streak is not more important than your friends or your life&lt;/em&gt;). We should be at least saddened (and actually I was pissed off on myself because of that). At the same time, we are whining that this or that library or framework has not got enough tests, has poor examples or almost no documentation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/foss.png&quot; alt=&quot;Free Open Source Software&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I have got an idea, and if you have the same problem - let’s try to do it with me - &lt;em&gt;instead of talking, start doing&lt;/em&gt;. Instead starting a &lt;em&gt;flame war&lt;/em&gt; or answering in the hot topic on Twitter, open an &lt;em&gt;IDE&lt;/em&gt;. Instead of trying to convince someone about superiority one technology over another, search for a small thing to do in your favorite open source project. Take the initiative, be proactive - being a contributor is not that hard. Of course do it mindfully, you should not patch a Linux kernel source code if you have not got any idea how to start there - but I am sure that there are plenty of smaller libraries which are begging for help.&lt;/p&gt;

&lt;p&gt;You can even extrapolate this policy, to other things like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Giving back your precious time as a mentor or lecturer&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Cooperate with your local meetups or &lt;em&gt;CoderDojos&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Try to not waste time on useless rants, it will be also beneficial for your daily attitude.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;JavaScript&lt;/em&gt; is better than &lt;em&gt;Java&lt;/em&gt;? Or maybe the other way? &lt;strong&gt;Who cares!&lt;/strong&gt; Instead, build something valuable with any technology that you’d like.&lt;/li&gt;
  &lt;li&gt;Do not waste others time! Especially when you are asking for a help, and you don’t want to listen - you can easily become an &lt;em&gt;askhole&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Respect even the free activities - if you’ve subscribed or &lt;em&gt;RVSPed&lt;/em&gt; on a free event, and you can’t go - please, click that you won’t go.&lt;/li&gt;
  &lt;li&gt;Give, not only take! Spent just 30 minutes with backlog or documentation of your favorite library. It is not that hard to contribute.&lt;/li&gt;
  &lt;li&gt;If you are learning, take an example from your trainers! After a while you’ll become a one, so pay it forward.&lt;/li&gt;
  &lt;li&gt;No community or interesting meet-up group? &lt;strong&gt;Build one&lt;/strong&gt; - start small and use social media to grow.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-can-i-help&quot;&gt;How can I help?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Just do something for others&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Spent some time with open source projects, help with documentation, prioritize and clarify bugs and theirs description (&lt;em&gt;triage&lt;/em&gt;), implement a missing feature or missing integration in your favorite library or framework. Share your knowledge and experience on the local events, across local meetups, publish articles on your blog and share it on social media. Be a true participant of your community!&lt;/p&gt;

&lt;p&gt;I have also prepared links to many aforementioned initiatives (I focused more on Silesian events, but you’ll get the idea):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nodebug.me&quot;&gt;Triage Node.js bugs in your spare time&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io&quot;&gt;Participate in NodeSchool&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/nodeschool/silesia/issues&quot;&gt;Help with nodeschool/silesia&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://qualityexcites.pl/en/&quot;&gt;Got to the Quality Excites&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;hs-silesia.pl&quot;&gt;Build with us a community around HackerSpace Silesia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://2015.dwo.mikstura.it/&quot;&gt;Participate in DWO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://slaskit.pl/&quot;&gt;Look at other silesian events&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=gpSn9yUf2wM&quot;&gt;How to create a meet-up?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And many, many others - you probably know better which projects need help. &lt;em&gt;It is matter of time, there is nothing more precious than your time that you can give to others&lt;/em&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 28 May 2015 16:00:00 +0200</pubDate>
        <link>http://www.afronski.pl/2015/05/28/and-you-what-are-you-doing-for-the-community.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2015/05/28/and-you-what-are-you-doing-for-the-community.html</guid>
      </item>
    
      <item>
        <title>nodeschool.io</title>
        <description>&lt;h1 id=&quot;nodeschoolio&quot;&gt;nodeschool.io&lt;/h1&gt;

&lt;p&gt;I would like to present very interesting initiative for everyone interested in topics oriented around Node.js. If you are curious how to learn effectively about stuff available on the platform, how to use libraries effectively and write the most idiomatic code which is consistent with &lt;em&gt;UNIX&lt;/em&gt; philosophy, please read this article further.&lt;/p&gt;

&lt;h1 id=&quot;why&quot;&gt;Why?&lt;/h1&gt;

&lt;p&gt;The major problem when you are learning new stuff is related with first step, even with a basic question &lt;em&gt;“how to start”&lt;/em&gt;. This barrier is often related with new thinking or programming paradigm, new language, unknown environment or even unfamiliar &lt;code&gt;API&lt;/code&gt;. For almost every technology we can find opinionated stuff on the Internet: multiple tutorials, guidelines (often it is not so hard to find two conflicting ones &lt;img class=&quot;emoji&quot; title=&quot;:wink:&quot; alt=&quot;:wink:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f609.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;) and blog posts with information how to work with technology in which we are interested. Moreover, in almost each case we still have a question back in our heads: &lt;em&gt;“Is it a proper way to learn and work with it?”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Learning process could be easier if we have one source of truth and best practices how to approach certain topics related with piece of technology which is interesting for us. For Node.js such initiative is called &lt;a href=&quot;http://nodeschool.io&quot;&gt;nodeschool.io&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/nodeschool.png&quot; alt=&quot;Nodeschool Main Page&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;what&quot;&gt;What?&lt;/h1&gt;

&lt;p&gt;Nodeschool is a series of interactive workshops, divided into two sections - core concepts and electives.&lt;/p&gt;

&lt;p&gt;In the main concepts we have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#learn-you-node&quot;&gt;basic asynchronous programming and introduction to the core Node.js concepts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#stream-adventure&quot;&gt;introduction to the streams&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#bytewiser&quot;&gt;bytes and buffers manipulation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#functionaljs&quot;&gt;functional programming in JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#git-it&quot;&gt;how to work effectively with git and github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Electives are oriented around:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#levelmeup&quot;&gt;use of node.js binding and modules related with LevelDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#makemehapi&quot;&gt;hapi.js framework&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#expressworks&quot;&gt;express.js framework&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#goingnative&quot;&gt;native modules and addons&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#count-to-6&quot;&gt;6th version of ECMAScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#browserify-adventure&quot;&gt;browserify&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#promiseitwonthurt&quot;&gt;promises&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#asyncyou&quot;&gt;async.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;how-to-start&quot;&gt;How to start?&lt;/h1&gt;

&lt;p&gt;At first you need to have &lt;em&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;node&lt;/code&gt;&lt;/em&gt; executables - if you do not have them already on your machine, the most recommended place to start is &lt;a href=&quot;http://nodejs.org/download/&quot;&gt;here&lt;/a&gt;. Then you can install each workshop globally using &lt;em&gt;Node Packaged Modules&lt;/em&gt; manager:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install -g learnyounode&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In this example &lt;em&gt;&lt;code&gt;-g&lt;/code&gt;&lt;/em&gt; flag means &lt;em&gt;“install package globally”&lt;/em&gt;, so it will be available as a executable on your machine.&lt;/p&gt;

&lt;p&gt;Every single workshop is using the same command line interface and workflow. This eases the work with each of them. Moreover, assignments are well defined, descriptive and small enough to perform them as a &lt;a href=&quot;http://en.wikipedia.org/wiki/Kata_%28programming%29&quot;&gt;daily code kata&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Workflow is oriented around invoking commands in the terminal. After starting the workshop executable without any parameters you will see the list of available assignments, like presented below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/learnyounode.png&quot; alt=&quot;learnyounode workshop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then you should select first unresolved assignment from the list. After that you will see the description and guidelines how you should approach this task. Then you have two commands for testing and verifying prepared solution.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Testing your solution:&lt;/span&gt;
~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;learnyounode run &amp;lt;FILE_NAME_WITH_SOLUTION&amp;gt;
&lt;span class=&quot;c&quot;&gt;# Veryfing the prepared solution:&lt;/span&gt;
~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;learnyounode verify &amp;lt;FILE_NAME_WITH_SOLUTION&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If solution is correct, the current assignment will be marked as resolved. Now you are ready to work with each workshop available on the main page.&lt;/p&gt;

&lt;h1 id=&quot;i-am-the-beginner-in-nodejs-community---where-should-i-start&quot;&gt;I am the beginner in Node.js community - where should I start?&lt;/h1&gt;

&lt;p&gt;I will recommend to start with &lt;a href=&quot;http://nodeschool.io/#learn-you-node&quot;&gt;learn-you-node workshop&lt;/a&gt; and then move forward through the rest of core concepts. After that you are free to choose any from the interesting topics from electives group (e.g. related with specific framework).&lt;/p&gt;

&lt;h1 id=&quot;i-am-more-advanced-member---how-can-i-contribute&quot;&gt;I am more advanced member - how can I contribute?&lt;/h1&gt;

&lt;p&gt;You can contribute in several ways.&lt;/p&gt;

&lt;p&gt;The easiest thing is to perform any workshop and check it in practice (especially with edge cases). Then you can fork repository related with it, fix the bugs, improve documentation and clarity of the steps, maybe even add missing scenarios and lessons. After that you can contribute back your changes to the community by providing a &lt;em&gt;pull request&lt;/em&gt; to the workshop author.&lt;/p&gt;

&lt;p&gt;Second option is related with local events. You can easily organize a new event in your city which will be oriented around whole &lt;em&gt;nodeschool&lt;/em&gt; initiative (or even around just one type of workshops). There is a detailed guideline prepared by organization &lt;a href=&quot;http://nodeschool.io/host.html&quot;&gt;how to do this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And finally, you can create a new workshop. In such vibrant and broad community you can easily find topic suitable for you. If you do not have a clue which could be suitable for you, you can look at the list of possible topics gathered &lt;a href=&quot;https://github.com/nodeschool/workshoppers/issues?labels=status%3Arequested&quot;&gt;here&lt;/a&gt;. If you already have an idea, you should fork the &lt;a href=&quot;https://github.com/rvagg/workshopper&quot;&gt;rvagg/workshopper&lt;/a&gt; project and start creating lessons. Then, you can add your project to the list of available workshops via &lt;a href=&quot;https://github.com/nodeschool/workshoppers/issues?labels=status%3Ain+progress&quot;&gt;github&lt;/a&gt; - then your workshop will be reviewed, validated and after successful acceptation it will be available as a official lesson on the main &lt;em&gt;nodeschool&lt;/em&gt; page.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io&quot;&gt;nodeschool.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/host.html&quot;&gt;How to run a new ‘nodeschool’ event?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rvagg/workshopper&quot;&gt;rvagg/workshopper&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 18 Jul 2014 15:00:00 +0200</pubDate>
        <link>http://www.afronski.pl/2014/07/18/nodeschool-io.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/07/18/nodeschool-io.html</guid>
      </item>
    
  </channel>
</rss>
