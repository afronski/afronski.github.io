<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>afronski.pl</title>
    <description>Random thoughts from top of my head - afronski.pl</description>
    <link>http://www.afronski.pl</link>
    <atom:link href="http://www.afronski.pl/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>My picks of NDC 2014 - part II</title>
        <description>&lt;h1 id=&quot;my_picks_of_ndc_2014__part_ii&quot;&gt;My picks of NDC 2014 - part II&lt;/h1&gt;

&lt;p&gt;Another presentations worth looking from the past NDC conference (previous part is &lt;a href=&quot;http://www.afronski.pl/2014/06/16/my-picks-of-NDC-2014-part-1.html&quot;&gt;here&lt;/a&gt;):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97537675&quot;&gt;Venkat Subramaniam - Towards an Evolutionary Architecture&lt;/a&gt; - Very nice talk which summarizes all necessary things which are important in the concept of &lt;em&gt;Good Architecture&lt;/em&gt;. An architect in Agile have been considered as obsolete by many people, but actually it is the opposite. Good architecture defers decisions, enables evolution and moreover handles or even removes completely the complexity. Besides that - a very nice Agile approach is to prioritize features and assignments by the business value and the architectural impact - by doing that you can really avoid many pitfalls when you are moving forward and crush the knowledge during the process of building the application.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97415346&quot;&gt;Cory House - Becoming an Outlier: Career Reboot for the Developer Mind&lt;/a&gt; - Definitely recommended video to watch. For many people it will be a mind and eye opening experience. Handful of valuable thoughts and advices how to manage your career, change your habits and adapt in the continuously changing environment.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97516289&quot;&gt;Roy Osherove - Beautiful Builds&lt;/a&gt; - Very refreshing talk. It starts by very obvious, but very often forgotten statement that &lt;em&gt;automated builds are not the continuous integration&lt;/em&gt;. It introduces important concept of &lt;em&gt;shipping skeleton&lt;/em&gt;. Mixing operational knowledge with building and deployment knowledge is also an anti-pattern. Talk contains a very useful set of patterns and best practices about CI and even Continuous Deployment - definitely recommended.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97507576&quot;&gt;Doc Norton - The Technical Debt Trap&lt;/a&gt; - Very wise and mindful explanation of Technical Debt metaphor (and moreover - the good and only true one). If you are operating this metaphor and you often use it, please watch this presentation and be sure that all points which are related with the true definition are fulfilled. Because if not, you are talking about &lt;em&gt;cruft&lt;/em&gt; not &lt;em&gt;debt&lt;/em&gt;. :wink:&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97408239&quot;&gt;Joe Armstrong - The mess we’re in&lt;/a&gt; - In most cases talks presented by Joe Armstrong can look like a little spontaneous, sometimes even unprepared. However it is a false belief - amount of experience, insight, pragmatic and at the same time scientific approach to the computing can be really underestimated. Knowledge and very insightful anecdotes are &lt;em&gt;flowing out this talk&lt;/em&gt;. If you want to know more or you are merely interested about the history of computing and how it actually will affect the future of computer science, it is a must-watch presentation.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97505679&quot;&gt;Aral Balkan - Free is a lie&lt;/a&gt; - Definitely recommended talk, especially if you do not have an idea what is a Google / Facebook business model. For those people it can be even a controversial talk (for me it is because of presenting Mozilla as not a ‘Free’ option in the IT world - claiming that most of the income comes from the Google and only that disqualifies this company from being &lt;em&gt;free as a liberty&lt;/em&gt; is &lt;em&gt;just unfair&lt;/em&gt;). In other words - if you do not know this already, by using free services - you are not a consumer, you are a product - &lt;em&gt;a data source&lt;/em&gt; - nothing less, nothing more.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97541185&quot;&gt;Venkat Subramaniam - Core Software Design Principles&lt;/a&gt; - Worth looking if you forgot or you would like to refresh your knowledge about &lt;em&gt;&lt;code&gt;SOLID&lt;/code&gt;&lt;/em&gt; principles, or you do not know what &lt;em&gt;&lt;code&gt;YAGNI&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;DRY&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;TDA&lt;/code&gt;&lt;/em&gt; means. Otherwise, you will watch a rather repetitive (but not boring) presentation.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97337252&quot;&gt;Garrett Smith - Functional code considered Beautiful&lt;/a&gt; - Definitely worth looking, especially that it is a kind of a rather &lt;em&gt;soft&lt;/em&gt; talk with very pragmatic insights, without &lt;em&gt;preaching&lt;/em&gt; and not necessary &lt;em&gt;marketing&lt;/em&gt;. If you are not convinced enough - try to think about very readable, declarative code which is oriented around concurrency and is side-effect free - how it should look like? And one more - presented sample with &lt;em&gt;&lt;code&gt;GCD&lt;/code&gt;&lt;/em&gt; is beautiful and enlightening.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97514517&quot;&gt;Mathias Brandewinder - F# and Machine Learning: a winning combination&lt;/a&gt; - Inspiring and fresh talk, both regarding the topic and presented programming language. Definitely worth looking if you are interested in the polyglot programming movement, and you are looking for interesting language to learn in this or next year. :wink:&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97419178&quot;&gt;Bruce Tate - Pipe Dreams&lt;/a&gt; - Another talk from the polyglot programming family. In this case it presents only two key pieces of Elixir, a new language which is a mix of Ruby syntax, Erlang VM and OTP library, but does it well and deeply - actually it is open-minded in terms of specific approach to the data processing paradigm and sequentiality.&lt;/li&gt;
&lt;/ol&gt;</description>
        <pubDate>Thu, 28 Aug 2014 20:00:00 +0000</pubDate>
        <link>http://www.afronski.pl/2014/08/28/my-picks-of-NDC-2014-part-2.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/08/28/my-picks-of-NDC-2014-part-2.html</guid>
      </item>
    
      <item>
        <title>nodeschool.io</title>
        <description>&lt;h1 id=&quot;nodeschoolio&quot;&gt;nodeschool.io&lt;/h1&gt;

&lt;p&gt;I would like to present very interesting initiative for everyone interested in topics oriented around Node.js. If you are curious how to learn effectively about stuff available on the platform, how to use libraries effectively and write the most idiomatic code which is consistent with &lt;em&gt;UNIX&lt;/em&gt; philosophy, please read this article further.&lt;/p&gt;

&lt;h1 id=&quot;why&quot;&gt;Why?&lt;/h1&gt;

&lt;p&gt;The major problem when you are learning new stuff is related with first step, even with a basic question &lt;em&gt;“how to start”&lt;/em&gt;. This barrier is often related with new thinking or programming paradigm, new language, unknown environment or even unfamiliar &lt;code&gt;API&lt;/code&gt;. For almost every technology we can find opinionated stuff on the Internet: multiple tutorials, guidelines (often it is not so hard to find two conflicting ones :wink:) and blog posts with information how to work with technology in which we are interested. Moreover, in almost each case we still have a question back in our heads: &lt;em&gt;“Is it a proper way to learn and work with it?”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Learning process could be easier if we have one source of truth and best practices how to approach certain topics related with piece of technology which is interesting for us. For Node.js such initiative is called &lt;a href=&quot;http://nodeschool.io&quot;&gt;nodeschool.io&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/nodeschool.png&quot; alt=&quot;Nodeschool Main Page&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;what&quot;&gt;What?&lt;/h1&gt;

&lt;p&gt;Nodeschool is a series of interactive workshops, divided into two sections - core concepts and electives.&lt;/p&gt;

&lt;p&gt;In the main concepts we have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#learn-you-node&quot;&gt;basic asynchronous programming and introduction to the core Node.js concepts&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#stream-adventure&quot;&gt;introduction to the streams&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#bytewiser&quot;&gt;bytes and buffers manipulation&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#functionaljs&quot;&gt;functional programming in JavaScript&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#git-it&quot;&gt;how to work effectively with git and github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Electives are oriented around:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#levelmeup&quot;&gt;use of node.js binding and modules related with LevelDB&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#makemehapi&quot;&gt;hapi.js framework&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#expressworks&quot;&gt;express.js framework&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#goingnative&quot;&gt;native modules and addons&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#count-to-6&quot;&gt;6th version of ECMAScript&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#browserify-adventure&quot;&gt;browserify&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#promiseitwonthurt&quot;&gt;promises&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/#asyncyou&quot;&gt;async.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;how_to_start&quot;&gt;How to start?&lt;/h1&gt;

&lt;p&gt;At first you need to have &lt;em&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/em&gt; and &lt;em&gt;&lt;code&gt;node&lt;/code&gt;&lt;/em&gt; executables - if you do not have them already on your machine, the most recommended place to start is &lt;a href=&quot;http://nodejs.org/download/&quot;&gt;here&lt;/a&gt;. Then you can install each workshop globally using &lt;em&gt;Node Packaged Modules&lt;/em&gt; manager:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;npm install -g learnyounode
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example &lt;em&gt;&lt;code&gt;-g&lt;/code&gt;&lt;/em&gt; flag means &lt;em&gt;“install package globally”&lt;/em&gt;, so it will be available as a executable on your machine.&lt;/p&gt;

&lt;p&gt;Every single workshop is using the same command line interface and workflow. This eases the work with each of them. Moreover, assignments are well defined, descriptive and small enough to perform them as a &lt;a href=&quot;http://en.wikipedia.org/wiki/Kata_%28programming%29&quot;&gt;daily code kata&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Workflow is oriented around invoking commands in the terminal. After starting the workshop executable without any parameters you will see the list of available assignments, like presented below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/learnyounode.png&quot; alt=&quot;learnyounode workshop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then you should select first unresolved assignment from the list. After that you will see the description and guidelines how you should approach this task. Then you have two commands for testing and verifying prepared solution.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='c'&gt;# Testing your solution:&lt;/span&gt;
~ &lt;span class='nv'&gt;$ &lt;/span&gt;learnyounode run &amp;lt;FILE_NAME_WITH_SOLUTION&amp;gt;
&lt;span class='c'&gt;# Veryfing the prepared solution:&lt;/span&gt;
~ &lt;span class='nv'&gt;$ &lt;/span&gt;learnyounode verify &amp;lt;FILE_NAME_WITH_SOLUTION&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If solution is correct, the current assignment will be marked as resolved. Now you are ready to work with each workshop available on the main page.&lt;/p&gt;

&lt;h1 id=&quot;i_am_the_beginner_in_nodejs_community__where_should_i_start&quot;&gt;I am the beginner in Node.js community - where should I start?&lt;/h1&gt;

&lt;p&gt;I will recommend to start with &lt;a href=&quot;http://nodeschool.io/#learn-you-node&quot;&gt;learn-you-node workshop&lt;/a&gt; and then move forward through the rest of core concepts. After that you are free to choose any from the interesting topics from electives group (e.g. related with specific framework).&lt;/p&gt;

&lt;h1 id=&quot;i_am_more_advanced_member__how_can_i_contribute&quot;&gt;I am more advanced member - how can I contribute?&lt;/h1&gt;

&lt;p&gt;You can contribute in several ways.&lt;/p&gt;

&lt;p&gt;The easiest thing is to perform any workshop and check it in practice (especially with edge cases). Then you can fork repository related with it, fix the bugs, improve documentation and clarity of the steps, maybe even add missing scenarios and lessons. After that you can contribute back your changes to the community by providing a &lt;em&gt;pull request&lt;/em&gt; to the workshop author.&lt;/p&gt;

&lt;p&gt;Second option is related with local events. You can easily organize a new event in your city which will be oriented around whole &lt;em&gt;nodeschool&lt;/em&gt; initiative (or even around just one type of workshops). There is a detailed guideline prepared by organization &lt;a href=&quot;http://nodeschool.io/host.html&quot;&gt;how to do this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And finally, you can create a new workshop. In such vibrant and broad community you can easily find topic suitable for you. If you do not have a clue which could be suitable for you, you can look at the list of possible topics gathered &lt;a href=&quot;https://github.com/nodeschool/workshoppers/issues?labels=status%3Arequested&quot;&gt;here&lt;/a&gt;. If you already have an idea, you should fork the &lt;a href=&quot;https://github.com/rvagg/workshopper&quot;&gt;rvagg/workshopper&lt;/a&gt; project and start creating lessons. Then, you can add your project to the list of available workshops via &lt;a href=&quot;https://github.com/nodeschool/workshoppers/issues?labels=status%3Ain+progress&quot;&gt;github&lt;/a&gt; - then your workshop will be reviewed, validated and after successful acceptation it will be available as a official lesson on the main &lt;em&gt;nodeschool&lt;/em&gt; page.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://nodeschool.io&quot;&gt;nodeschool.io&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://nodeschool.io/host.html&quot;&gt;How to run a new ‘nodeschool’ event?&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://github.com/rvagg/workshopper&quot;&gt;rvagg/workshopper&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
        <pubDate>Fri, 18 Jul 2014 15:00:00 +0000</pubDate>
        <link>http://www.afronski.pl/2014/07/18/nodeschool-io.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/07/18/nodeschool-io.html</guid>
      </item>
    
      <item>
        <title>My picks of NDC 2014 - part I</title>
        <description>&lt;h1 id=&quot;my_picks_of_ndc_2014__part_i&quot;&gt;My picks of NDC 2014 - part I&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97329157&quot;&gt;Kevlin Henney - Seven Ineffective Coding Habits of Many Programmers&lt;/a&gt; - Very refreshing talk about style and programming habbits. Even if it has many controversial points from your perspective and it is very opinionated, many of them are at least thought-provoking and maybe they should be reconsidered and rethought again.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97315946&quot;&gt;Hadi Hariri - Developing in a Decade&lt;/a&gt; - Very inspiring and refreshing talk what software development, internet and whole IT actually is and why it should change if we want to be happier and live in the better world. Amazing anegdotes and very thought-provoking comparisons to the books (Orwell’s &lt;em&gt;“1984”&lt;/em&gt;, Huxley’s &lt;em&gt;“Brave New World”&lt;/em&gt;, Postman’s &lt;em&gt;“Amusing Ourselves to Death”&lt;/em&gt;). For me, this is the best presentation of this year NDC by now.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97530863&quot;&gt;Robert C. Martin - Clean Architecture and Design&lt;/a&gt; - Strongly recommended if you have not seen earlier talks made by &lt;em&gt;Uncle Bob&lt;/em&gt; related with this topic. The most appropriate summary of this talk: &lt;em&gt;application’s business rules are the most important things, protect them - everything is a implementation detail and it should be pluggable&lt;/em&gt;. In other words &lt;em&gt;good architecture maximizes the number of decisions not made&lt;/em&gt;.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97505656&quot;&gt;Tim Berglund - Discrete Math You Need to Know&lt;/a&gt; - Inspiring talk (even if you may think that math cannot be inspiring). Definitely recommended, at first - it is recommended to stretch your mind frequently, moreover - it is nice to know more and have these tools in your toolbox (or what is even more recommended - refresh it). Surprisingly, still many people in IT do not know how the RSA works underneath.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97318800&quot;&gt;Denise R. Jackobs - Banish Your Inner Critic&lt;/a&gt; - It can be very enlightening talk for many people, maybe even a life changer. If you have problems with pursuing to the perfection state, procrastination and you have feeling and knowledge that you are a victim of &lt;em&gt;impostor syndrome&lt;/em&gt; definitely worth watching.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97516288&quot;&gt;Robert C. Martin - Advanced Test Driven Development&lt;/a&gt; - Again, if you have seen it before, there is probably nothing new, but if not - please definitely watch it. Very interesting concept called &lt;em&gt;transformation priority premise&lt;/em&gt;. And surprising summary - &lt;em&gt;if statement is a degenerated case of while loop&lt;/em&gt;. :wink:&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://vimeo.com/97537026&quot;&gt;Scott Bellware - TDD in Tatters&lt;/a&gt; - Eye-opening introduction about cognitive theory and learning. Very nice differentiation between crude and subtle things, which sometimes fells out and disappear in the process of learning. I disagree about that automation leads to removal a connection between the programmers and code, but still it is a viable talk (at least the beginning about &lt;em&gt;amateur cognitive theory&lt;/em&gt;, pointing out the subtleties and explaining the design role in &lt;em&gt;TDD&lt;/em&gt; acronym). The most important quote from this presentation is &lt;em&gt;every test is an additional coupling to the code&lt;/em&gt; - and by providing good design we should minimize the coupling, we should control it. It is the subtle thing that we often ignore.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;how_to_watch_these_videos_offline&quot;&gt;How to watch these videos offline?&lt;/h2&gt;

&lt;p&gt;Unfortunately, since 2013 there are no &lt;em&gt;&lt;code&gt;torrent&lt;/code&gt;&lt;/em&gt; files, which combine all videos in one place. But there is a solution - we can use &lt;code&gt;Selenium&lt;/code&gt; &lt;em&gt;JavaScript&lt;/em&gt; driver to scrap all links from &lt;em&gt;&lt;code&gt;HTML5&lt;/code&gt;&lt;/em&gt; &lt;em&gt;video&lt;/em&gt; tags. Complete source code of scripts and helpers is available &lt;a href=&quot;https://github.com/afronski/playground-repository/tree/master/vimeo-scraper&quot;&gt;here&lt;/a&gt;. Installation:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='lineno'&gt;1&lt;/span&gt; &lt;span class='c'&gt;# On Arch Linux, Selenium Chrome WebDriver is available only in AUR.&lt;/span&gt;
&lt;span class='lineno'&gt;2&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;pacaur -S chromedriver
&lt;span class='lineno'&gt;3&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;npm install
&lt;span class='lineno'&gt;4&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;node vimeo-scraper.js &amp;gt; urls.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the output file you will receive list of URLs which point directly to &lt;em&gt;MP4&lt;/em&gt; ready to download.&lt;/p&gt;

&lt;h2 id=&quot;appendix__a_bitter_state_of_headless_browsers&quot;&gt;Appendix - A bitter state of headless browsers&lt;/h2&gt;

&lt;p&gt;I know that there are tools capable to do such things headlessly. I thought that it will be an easy task to do.&lt;/p&gt;

&lt;p&gt;Unfortunately, I have tested &lt;code&gt;Phantom.js&lt;/code&gt; and &lt;code&gt;SlimmerJS&lt;/code&gt; (representatives of two major browser engines - &lt;em&gt;WebKit&lt;/em&gt; and &lt;em&gt;Gecko&lt;/em&gt;) and both does not work (even if creators of &lt;code&gt;SlimmerJS&lt;/code&gt; &lt;a href=&quot;http://slimerjs.org/features.html&quot;&gt;claims&lt;/a&gt; that it should work with &lt;em&gt;&lt;code&gt;HTML5&lt;/code&gt;&lt;/em&gt; &lt;em&gt;video&lt;/em&gt;, &lt;code&gt;Phantom.js&lt;/code&gt; is slightly better in this matter - it &lt;a href=&quot;https://github.com/ariya/phantomjs/wiki/Supported-Web-Standards#unsupported-features&quot;&gt;officially&lt;/a&gt; does not support &lt;em&gt;audio&lt;/em&gt; and &lt;em&gt;video&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;The best implementation of &lt;em&gt;&lt;code&gt;WebKit&lt;/code&gt;&lt;/em&gt; rendering engine available to Node.js called &lt;em&gt;Chimera&lt;/em&gt; is &lt;a href=&quot;https://github.com/deanmao/node-chimera/issues/44#issuecomment-30561620&quot;&gt;no longer maintained&lt;/a&gt;. It was a very nice module, I have used it in the past - very unfortunate and disappointing decision.&lt;/p&gt;

&lt;p&gt;So if you really want to scrape pages headlessly by doing more than simple rendering, measure loading time and capture a single screenshot, you need to use the good, old and reliable pair: &lt;code&gt;Selenium&lt;/code&gt; and &lt;code&gt;Xvfb&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://vimeo.com/channels/ndc2014&quot;&gt;NDC 2014 Vimeo Playlist&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://slimmerjs.org&quot;&gt;SlimmerJS&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://phantomjs.org&quot;&gt;phantomjs&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://github.com/deanmao/node-chimera&quot;&gt;&lt;code&gt;node-chimera&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
        <pubDate>Mon, 16 Jun 2014 22:10:00 +0000</pubDate>
        <link>http://www.afronski.pl/2014/06/16/my-picks-of-NDC-2014-part-1.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/06/16/my-picks-of-NDC-2014-part-1.html</guid>
      </item>
    
      <item>
        <title>Easter Eggs in Python's REPL</title>
        <description>&lt;h1 id=&quot;easter_eggs_in_pythons_&quot;&gt;Easter Eggs in Python’s &lt;code&gt;REPL&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;Recently, I have ran into a funny thing in Python. Try to import &lt;em&gt;&lt;code&gt;antigravity&lt;/code&gt;&lt;/em&gt; module inside the &lt;code&gt;REPL&lt;/code&gt;:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='nn'&gt;antigravity&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obviously, it is not the only funny thing hidden somewhere deep in the Python implementation. I researched the topic and I found more examples of easter eggs :grin:.&lt;/p&gt;

&lt;p&gt;The best known is &lt;code&gt;import this&lt;/code&gt; easter egg:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='nn'&gt;this&lt;/span&gt;
&lt;span class='n'&gt;The&lt;/span&gt; &lt;span class='n'&gt;Zen&lt;/span&gt; &lt;span class='n'&gt;of&lt;/span&gt; &lt;span class='n'&gt;Python&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;by&lt;/span&gt; &lt;span class='n'&gt;Tim&lt;/span&gt; &lt;span class='n'&gt;Peters&lt;/span&gt;

&lt;span class='n'&gt;Beautiful&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;better&lt;/span&gt; &lt;span class='n'&gt;than&lt;/span&gt; &lt;span class='n'&gt;ugly&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Explicit&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;better&lt;/span&gt; &lt;span class='n'&gt;than&lt;/span&gt; &lt;span class='n'&gt;implicit&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Simple&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;better&lt;/span&gt; &lt;span class='n'&gt;than&lt;/span&gt; &lt;span class='nb'&gt;complex&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Complex&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;better&lt;/span&gt; &lt;span class='n'&gt;than&lt;/span&gt; &lt;span class='n'&gt;complicated&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Flat&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;better&lt;/span&gt; &lt;span class='n'&gt;than&lt;/span&gt; &lt;span class='n'&gt;nested&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Sparse&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;better&lt;/span&gt; &lt;span class='n'&gt;than&lt;/span&gt; &lt;span class='n'&gt;dense&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Readability&lt;/span&gt; &lt;span class='n'&gt;counts&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Special&lt;/span&gt; &lt;span class='n'&gt;cases&lt;/span&gt; &lt;span class='n'&gt;aren&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;t special enough to break the rules.&lt;/span&gt;
&lt;span class='n'&gt;Although&lt;/span&gt; &lt;span class='n'&gt;practicality&lt;/span&gt; &lt;span class='n'&gt;beats&lt;/span&gt; &lt;span class='n'&gt;purity&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Errors&lt;/span&gt; &lt;span class='n'&gt;should&lt;/span&gt; &lt;span class='n'&gt;never&lt;/span&gt; &lt;span class='k'&gt;pass&lt;/span&gt; &lt;span class='n'&gt;silently&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Unless&lt;/span&gt; &lt;span class='n'&gt;explicitly&lt;/span&gt; &lt;span class='n'&gt;silenced&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;In&lt;/span&gt; &lt;span class='n'&gt;the&lt;/span&gt; &lt;span class='n'&gt;face&lt;/span&gt; &lt;span class='n'&gt;of&lt;/span&gt; &lt;span class='n'&gt;ambiguity&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;refuse&lt;/span&gt; &lt;span class='n'&gt;the&lt;/span&gt; &lt;span class='n'&gt;temptation&lt;/span&gt; &lt;span class='n'&gt;to&lt;/span&gt; &lt;span class='n'&gt;guess&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;There&lt;/span&gt; &lt;span class='n'&gt;should&lt;/span&gt; &lt;span class='n'&gt;be&lt;/span&gt; &lt;span class='n'&gt;one&lt;/span&gt;&lt;span class='o'&gt;--&lt;/span&gt; &lt;span class='ow'&gt;and&lt;/span&gt; &lt;span class='n'&gt;preferably&lt;/span&gt; &lt;span class='n'&gt;only&lt;/span&gt; &lt;span class='n'&gt;one&lt;/span&gt; &lt;span class='o'&gt;--&lt;/span&gt;&lt;span class='n'&gt;obvious&lt;/span&gt; &lt;span class='n'&gt;way&lt;/span&gt; &lt;span class='n'&gt;to&lt;/span&gt; &lt;span class='n'&gt;do&lt;/span&gt; &lt;span class='n'&gt;it&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Although&lt;/span&gt; &lt;span class='n'&gt;that&lt;/span&gt; &lt;span class='n'&gt;way&lt;/span&gt; &lt;span class='n'&gt;may&lt;/span&gt; &lt;span class='ow'&gt;not&lt;/span&gt; &lt;span class='n'&gt;be&lt;/span&gt; &lt;span class='n'&gt;obvious&lt;/span&gt; &lt;span class='n'&gt;at&lt;/span&gt; &lt;span class='n'&gt;first&lt;/span&gt; &lt;span class='n'&gt;unless&lt;/span&gt; &lt;span class='n'&gt;you&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;re Dutch.&lt;/span&gt;
&lt;span class='n'&gt;Now&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;better&lt;/span&gt; &lt;span class='n'&gt;than&lt;/span&gt; &lt;span class='n'&gt;never&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Although&lt;/span&gt; &lt;span class='n'&gt;never&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;often&lt;/span&gt; &lt;span class='n'&gt;better&lt;/span&gt; &lt;span class='n'&gt;than&lt;/span&gt; &lt;span class='o'&gt;*&lt;/span&gt;&lt;span class='n'&gt;right&lt;/span&gt;&lt;span class='o'&gt;*&lt;/span&gt; &lt;span class='n'&gt;now&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;If&lt;/span&gt; &lt;span class='n'&gt;the&lt;/span&gt; &lt;span class='n'&gt;implementation&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;hard&lt;/span&gt; &lt;span class='n'&gt;to&lt;/span&gt; &lt;span class='n'&gt;explain&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;it&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;s a bad idea.&lt;/span&gt;
&lt;span class='n'&gt;If&lt;/span&gt; &lt;span class='n'&gt;the&lt;/span&gt; &lt;span class='n'&gt;implementation&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;easy&lt;/span&gt; &lt;span class='n'&gt;to&lt;/span&gt; &lt;span class='n'&gt;explain&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;it&lt;/span&gt; &lt;span class='n'&gt;may&lt;/span&gt; &lt;span class='n'&gt;be&lt;/span&gt; &lt;span class='n'&gt;a&lt;/span&gt; &lt;span class='n'&gt;good&lt;/span&gt; &lt;span class='n'&gt;idea&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;
&lt;span class='n'&gt;Namespaces&lt;/span&gt; &lt;span class='n'&gt;are&lt;/span&gt; &lt;span class='n'&gt;one&lt;/span&gt; &lt;span class='n'&gt;honking&lt;/span&gt; &lt;span class='n'&gt;great&lt;/span&gt; &lt;span class='n'&gt;idea&lt;/span&gt; &lt;span class='o'&gt;--&lt;/span&gt; &lt;span class='n'&gt;let&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;s do more of those!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is also nice &lt;a href=&quot;http://www.redmountainsw.com/wordpress/archives/a-joke-in-the-python-interpreter&quot;&gt;example&lt;/a&gt; which exploits idea of &lt;code&gt;this&lt;/code&gt;:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='n'&gt;love&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;this&lt;/span&gt;
&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='n'&gt;this&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;love&lt;/span&gt;
&lt;span class='bp'&gt;True&lt;/span&gt;
&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='n'&gt;love&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='bp'&gt;True&lt;/span&gt;
&lt;span class='bp'&gt;False&lt;/span&gt;
&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='n'&gt;love&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='bp'&gt;False&lt;/span&gt;
&lt;span class='bp'&gt;False&lt;/span&gt;
&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='n'&gt;love&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='ow'&gt;not&lt;/span&gt; &lt;span class='bp'&gt;True&lt;/span&gt; &lt;span class='ow'&gt;or&lt;/span&gt; &lt;span class='bp'&gt;False&lt;/span&gt;
&lt;span class='bp'&gt;True&lt;/span&gt;
&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='n'&gt;love&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='ow'&gt;not&lt;/span&gt; &lt;span class='bp'&gt;True&lt;/span&gt; &lt;span class='ow'&gt;or&lt;/span&gt; &lt;span class='bp'&gt;False&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='n'&gt;love&lt;/span&gt; &lt;span class='ow'&gt;is&lt;/span&gt; &lt;span class='n'&gt;love&lt;/span&gt;
&lt;span class='bp'&gt;True&lt;/span&gt;
&lt;span class='bp'&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, Python as a &lt;em&gt;truly enterprise ready&lt;/em&gt; language has built-in &lt;code&gt;Hello World&lt;/code&gt; functionality:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='nn'&gt;__hello__&lt;/span&gt;
&lt;span class='n'&gt;Hello&lt;/span&gt; &lt;span class='n'&gt;world&lt;/span&gt;&lt;span class='o'&gt;...&lt;/span&gt;
&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='nb'&gt;reload&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;__hello__&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='n'&gt;Hello&lt;/span&gt; &lt;span class='n'&gt;world&lt;/span&gt;&lt;span class='o'&gt;...&lt;/span&gt;
&lt;span class='o'&gt;&amp;lt;&lt;/span&gt;&lt;span class='n'&gt;module&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;__hello__&amp;#39;&lt;/span&gt; &lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;&amp;lt;frozen&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But the funniest thing is &lt;em&gt;&lt;code&gt;IMHO&lt;/code&gt;&lt;/em&gt; this:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='nn'&gt;__future__&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='n'&gt;braces&lt;/span&gt;
  &lt;span class='n'&gt;File&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;line&lt;/span&gt; &lt;span class='mi'&gt;1&lt;/span&gt;
&lt;span class='ne'&gt;SyntaxError&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='ow'&gt;not&lt;/span&gt; &lt;span class='n'&gt;a&lt;/span&gt; &lt;span class='n'&gt;chance&lt;/span&gt;
&lt;span class='o'&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This exception message definitely made my day :wink:.&lt;/p&gt;

&lt;p&gt;If I omitted something, please post a comment and let me know which I have missed.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://xkcd.com/353&quot;&gt;&lt;code&gt;xkcd&lt;/code&gt;: Python!&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://svn.python.org/view/python/trunk/Lib/antigravity.py?view=markup&quot;&gt;Module &lt;code&gt;antigravity&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
        <pubDate>Sun, 08 Jun 2014 12:10:00 +0000</pubDate>
        <link>http://www.afronski.pl/2014/06/08/easter-eggs-in-pythons-repl.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/06/08/easter-eggs-in-pythons-repl.html</guid>
      </item>
    
      <item>
        <title>My Toolbox</title>
        <description>&lt;h1 id=&quot;my_toolbox&quot;&gt;My Toolbox&lt;/h1&gt;

&lt;p&gt;This post is mostly a summary, notes with conclusions and information about what tools I am actually using, which ones I have dropped and even more important why these are sufficient or just good enough.&lt;/p&gt;

&lt;h2 id=&quot;current_setup&quot;&gt;Current Setup&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Notes - &lt;em&gt;Microsoft OneNote&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;Impressive web and mobile clients.&lt;/li&gt;

&lt;li&gt;Easy access to my notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;Tasks - &lt;em&gt;Asana&lt;/em&gt; &amp;amp; &lt;em&gt;Google Calendar&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;Unfortunately all tasks management tools are after a while not enough and too &lt;em&gt;rigid&lt;/em&gt; for me.&lt;/li&gt;

&lt;li&gt;Right now I am scheduling all tasks in Google Calendar and rest of uncategorized tasks are available in &lt;em&gt;Asana&lt;/em&gt;.&lt;/li&gt;

&lt;li&gt;I am in the middle of researching an ideal workflow and transferring tasks from both to just one.&lt;/li&gt;

&lt;li&gt;Recently I back to &lt;em&gt;Trello&lt;/em&gt; for some side project and I cannot recall why I stopped to use this tool.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;Mind Maps - &lt;em&gt;MindMup&lt;/em&gt; (&lt;a href=&quot;http://www.mindmup.com&quot;&gt;mindmup.com&lt;/a&gt;)
&lt;ul&gt;
&lt;li&gt;I have started using mind mapping technique recently as a way of making notes and I must admit that in some cases it works perfectly.&lt;/li&gt;

&lt;li&gt;&lt;em&gt;MindMup&lt;/em&gt; is a very good web client for doing notes in such form.&lt;/li&gt;

&lt;li&gt;Unfortunately, I cannot use this approach in each case, because editing mode for longer notes and short descriptions in nodes is terrible.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;Repositories - &lt;em&gt;Github&lt;/em&gt; (&lt;a href=&quot;https://github.com&quot;&gt;github.com&lt;/a&gt;)
&lt;ul&gt;
&lt;li&gt;For me it is an obvious choice - I am a happy customer since 2012.&lt;/li&gt;

&lt;li&gt;I have tried &lt;em&gt;bitbucket&lt;/em&gt; earlier, I moved to &lt;em&gt;github&lt;/em&gt; and recently I have used &lt;em&gt;bitbucket&lt;/em&gt; again after a while - it works and looks much better right now.&lt;/li&gt;

&lt;li&gt;At this point of time these two systems are very similar in capabilities and supported features.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;Storage - &lt;em&gt;Google Drive&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;Natural choice because of Google Apps account and seamless integration with Google Docs.&lt;/li&gt;

&lt;li&gt;From &lt;em&gt;Android&lt;/em&gt;-like device it is a pleasure to work with Drive for me.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;Documents - &lt;em&gt;Google Docs&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;Impressive and what is most important working web and mobile client.&lt;/li&gt;

&lt;li&gt;Right now I am using Google Docs in all tasks which requires creating documents, spreadsheets.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;Read/Watch Later - &lt;em&gt;Instapaper&lt;/em&gt;, &lt;em&gt;Feedly&lt;/em&gt;, &lt;em&gt;Vimeo&lt;/em&gt;, &lt;em&gt;Youtube&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;Simple and clean UI, whole project is seamlessly integrated with Kindle.&lt;/li&gt;

&lt;li&gt;&lt;em&gt;Feedly&lt;/em&gt; (after closing &lt;em&gt;Google Reader&lt;/em&gt;) is for me the best application for RSS feeds management (with decent mobile client).
&lt;ul&gt;
&lt;li&gt;Still, it has serious issues - lack of tag management etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;For videos and podcasts I am using Youtube’s and Vimeo’s &lt;em&gt;“Watch Later”&lt;/em&gt; lists.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;Presentations - &lt;em&gt;Customized frameworks&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;I hate &lt;em&gt;PowerPoint&lt;/em&gt;-like presentations.&lt;/li&gt;

&lt;li&gt;I am using adjusted and crafted version of &lt;a href=&quot;http://lab.hakim.se/reveal-js&quot;&gt;reveal.js&lt;/a&gt; available &lt;a href=&quot;https://github.com/afronski/presentation-template&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;In future, with probability I will use &lt;a href=&quot;http://slides.com&quot;&gt;slides.com&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tools_that_i_tried&quot;&gt;Tools that I tried&lt;/h2&gt;

&lt;h3 id=&quot;emacs_orgmode&quot;&gt;Emacs org-mode&lt;/h3&gt;

&lt;p&gt;It is at the same time powerful and annoying. With &lt;em&gt;&lt;code&gt;git&lt;/code&gt;&lt;/em&gt; and remote repository creates very powerful combination. Unfortunately, there are no synchronization mechanisms for web / mobile application - for me it is not acceptable, because most of notes and ideas are coming to my mind when I do not have access to laptop / PC.&lt;/p&gt;

&lt;h3 id=&quot;dropbox&quot;&gt;Dropbox&lt;/h3&gt;

&lt;p&gt;My Dropbox account was the victim of migration to Google Apps - I would like to have seamless integration with my online documents, so the naturally I have migrated to Google Drive. Unfortunately this option has a serious drawback - Linux client for Google Drive does not exist, there is a very simple alternative called &lt;em&gt;&lt;code&gt;grive&lt;/code&gt;&lt;/em&gt;. Dropbox had very good client for that operating system.&lt;/p&gt;

&lt;h3 id=&quot;offline_notetaking&quot;&gt;Offline note-taking&lt;/h3&gt;

&lt;p&gt;This does not work for me. I have made myself to work with it and I just can’t. When I have pen and paper, notebook or something similar, I can note interesting observation and idea. There is only one &lt;em&gt;if&lt;/em&gt; - I often forgot to gather with me my notebook. Another disadvantage is related with offline management for such notes - it is much harder then the digital ones (lack of copy-pasting, lack of elasticity - moving paragraphs etc.).&lt;/p&gt;

&lt;h3 id=&quot;trello&quot;&gt;Trello&lt;/h3&gt;

&lt;p&gt;Very simple and neat board management tool. I have used it extensively in the past and one day I just stopped. Personally, I don’t remember why I did that - it can be that I had pile of tasks which are not properly reduced after a while and &lt;em&gt;icebox&lt;/em&gt; was bigger and bigger.&lt;/p&gt;

&lt;h3 id=&quot;evernote&quot;&gt;Evernote&lt;/h3&gt;

&lt;p&gt;It is a really good tool, I have used it previously as a something in the middle of note taking and long term tasks management tool. However lack of decent Linux / Web client enforced me to look for better alternative.&lt;/p&gt;

&lt;h3 id=&quot;prezi&quot;&gt;Prezi&lt;/h3&gt;

&lt;p&gt;It does not look good enough for me to pay for it, and free version limitation (e.g. I do not like watermarks) is unacceptable for me. Moreover communication via such tool can be very &lt;em&gt;cluttered&lt;/em&gt; and &lt;em&gt;inconsistent&lt;/em&gt;. Do you need more arguments? It is powered by Flash.&lt;/p&gt;

&lt;h3 id=&quot;impressjs&quot;&gt;impress.js&lt;/h3&gt;

&lt;p&gt;It is very neat tool, but complicated transforms and moving parts are &lt;em&gt;cluttering&lt;/em&gt; the meaning (as above). A huge advantage is use of a web platform and browser as a main technologies for this library.&lt;/p&gt;

&lt;h3 id=&quot;pocket&quot;&gt;Pocket&lt;/h3&gt;

&lt;p&gt;This project does not work for me because of several reasons. First, I have used it around a year ago and I hated this UI. Second, there were no integration with Kindle at that time.&lt;/p&gt;

&lt;h3 id=&quot;digg&quot;&gt;Digg&lt;/h3&gt;

&lt;p&gt;I have tried to use this web application and after a couple of days I gave up. Many glitches on the UI side and problem with categorization of sources were sufficient for me to drop that tool.&lt;/p&gt;

&lt;h3 id=&quot;the_old_reader&quot;&gt;The Old Reader&lt;/h3&gt;

&lt;p&gt;I really liked this application, it has simple and clean UI, decent tags and feeds categorization management. However after fuss with closing and reopening it discouraged me enough to keep me away from it.&lt;/p&gt;

&lt;h1 id=&quot;missing_pieces&quot;&gt;Missing Pieces&lt;/h1&gt;

&lt;p&gt;Actually, there is only one piece missing here - integration between tasks, calendar and feeds of information (like &lt;em&gt;Instapaper&lt;/em&gt;/&lt;em&gt;Youtube&lt;/em&gt;/&lt;em&gt;Vimeo&lt;/em&gt; queues). If you know such tool, please let me know.&lt;/p&gt;

&lt;p&gt;If you disagree with my opinion and my choices, please let me know about it in the comments.&lt;/p&gt;</description>
        <pubDate>Mon, 28 Apr 2014 22:30:00 +0000</pubDate>
        <link>http://www.afronski.pl/2014/04/28/my-toolbox.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/04/28/my-toolbox.html</guid>
      </item>
    
      <item>
        <title>Gibberish Game</title>
        <description>&lt;h1 id=&quot;gibberish_game&quot;&gt;Gibberish Game&lt;/h1&gt;

&lt;p&gt;Sometimes you cannot properly name the actual thing. Sometimes you exactly know how to name it, but it will introduce ambiguity and confusion. &lt;em&gt;How to avoid overloading certain terms and assign proper name to the actual definition?&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;what&quot;&gt;What?&lt;/h3&gt;

&lt;p&gt;Answer how to do it is related with a technique from &lt;em&gt;domain driven design&lt;/em&gt; process called &lt;em&gt;modeling whirlpool&lt;/em&gt;. This game helps &lt;em&gt;modeler&lt;/em&gt; choose and adjust a word to the description which &lt;em&gt;domain expert&lt;/em&gt; provides.&lt;/p&gt;

&lt;h3 id=&quot;when&quot;&gt;When?&lt;/h3&gt;

&lt;p&gt;You definitely should use this technique when the actual term cannot be safely used in unambiguous way or it is really overloaded with meanings e.g. couple of aggregates can be associated with it. By defining different, simple, temporary and not meaningful name to the definition we are enforcing our mind to use different parts of brain in order to &lt;em&gt;discover&lt;/em&gt; the actual meaning. It is a way of jumping out just for a while from the scientific and analytic mindset to the more creative one.&lt;/p&gt;

&lt;h3 id=&quot;how&quot;&gt;How?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Do not name model elements too early.&lt;/li&gt;

&lt;li&gt;Name it at first as &lt;em&gt;&lt;code&gt;foo&lt;/code&gt;&lt;/em&gt;/&lt;em&gt;&lt;code&gt;bar&lt;/code&gt;&lt;/em&gt;/&lt;em&gt;&lt;code&gt;blah&lt;/code&gt;&lt;/em&gt;/&lt;em&gt;&lt;code&gt;ble&lt;/code&gt;&lt;/em&gt;/etc. and describe its rules and features.
&lt;ul&gt;
&lt;li&gt;Proper and what is even more important - descriptive and clear name will automatically appear after a while.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;In the next iteration of describing things choose different word.
&lt;ul&gt;
&lt;li&gt;Why? Because your brain already learned what the previous word means.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;If &lt;em&gt;&lt;code&gt;foo&lt;/code&gt;&lt;/em&gt;-ish names sounds offensive and are not appropriate for the audience, you can use Greek letters instead.
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;code&gt;Alpha&lt;/code&gt;&lt;/em&gt;/&lt;em&gt;&lt;code&gt;Kappa&lt;/code&gt;&lt;/em&gt;/&lt;em&gt;&lt;code&gt;Psi&lt;/code&gt;&lt;/em&gt;/etc. sounds more professional :stuck_out_tongue_closed_eyes:.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://goodenoughsoftware.net/2012/02/28/the-gibberish-game/&quot;&gt;&lt;em&gt;The Gibberish Game&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://goodenoughsoftware.net/2012/02/29/the-context-game/&quot;&gt;&lt;em&gt;The Context Game&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=iaLeKHbspLg&quot;&gt;&lt;em&gt;Model jest wszystkim czego potrzebujesz&lt;/em&gt; (PL)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
        <pubDate>Thu, 24 Apr 2014 23:00:00 +0000</pubDate>
        <link>http://www.afronski.pl/2014/04/24/gibberish-game.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/04/24/gibberish-game.html</guid>
      </item>
    
      <item>
        <title>Useful tools - mailcatcher</title>
        <description>&lt;h1 id=&quot;useful_tools__&quot;&gt;Useful tools - &lt;code&gt;mailcatcher&lt;/code&gt;&lt;/h1&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;MailCatcher&lt;/em&gt; runs a super simple &lt;code&gt;SMTP&lt;/code&gt; server which catches any message sent to it to display in a web interface. It is a very useful tool which does not need a huge knowledge about e.g. &lt;code&gt;sendmail&lt;/code&gt; and it is really easy to set up.&lt;/p&gt;

&lt;h2 id=&quot;installation_and_usage&quot;&gt;Installation and Usage&lt;/h2&gt;

&lt;p&gt;Service is written in &lt;em&gt;Ruby&lt;/em&gt; and it is accessible in the gems repository. If you have &lt;em&gt;Ruby&lt;/em&gt; installed you will only need to perform two installation steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install it from gems by &lt;code&gt;gem install mailcatcher&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;Start the service by invoking command &lt;code&gt;mailcatcher&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;Go to the dashboard at &lt;code&gt;http://localhost:1080/&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;Send email through &lt;code&gt;smtp://localhost:1025&lt;/code&gt; - after that email should appear in the dashboard.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Using it inside a web framework e.g. &lt;em&gt;&lt;code&gt;Symfony2&lt;/code&gt;&lt;/em&gt; is a piece of cake. The only thing you need is a small modification in the &lt;em&gt;&lt;code&gt;parameters.yml&lt;/code&gt;&lt;/em&gt; configuration file:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='yaml'&gt;&lt;span class='l-Scalar-Plain'&gt;parameters&lt;/span&gt;&lt;span class='p-Indicator'&gt;:&lt;/span&gt;
  &lt;span class='l-Scalar-Plain'&gt;mailer_transport&lt;/span&gt;&lt;span class='p-Indicator'&gt;:&lt;/span&gt;  &lt;span class='l-Scalar-Plain'&gt;smtp&lt;/span&gt;
  &lt;span class='l-Scalar-Plain'&gt;mailer_host&lt;/span&gt;&lt;span class='p-Indicator'&gt;:&lt;/span&gt;       &lt;span class='l-Scalar-Plain'&gt;localhost&lt;/span&gt;
  &lt;span class='l-Scalar-Plain'&gt;mailer_port&lt;/span&gt;&lt;span class='p-Indicator'&gt;:&lt;/span&gt;       &lt;span class='l-Scalar-Plain'&gt;1025&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need to be sure that in the &lt;em&gt;&lt;code&gt;config.yml&lt;/code&gt;&lt;/em&gt; you have these keys:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='yaml'&gt;&lt;span class='l-Scalar-Plain'&gt;swiftmailer&lt;/span&gt;&lt;span class='p-Indicator'&gt;:&lt;/span&gt;
  &lt;span class='l-Scalar-Plain'&gt;transport&lt;/span&gt;&lt;span class='p-Indicator'&gt;:&lt;/span&gt;      &lt;span class='err'&gt;%&lt;/span&gt;&lt;span class='l-Scalar-Plain'&gt;mailer_transport%&lt;/span&gt;
  &lt;span class='l-Scalar-Plain'&gt;host&lt;/span&gt;&lt;span class='p-Indicator'&gt;:&lt;/span&gt;           &lt;span class='err'&gt;%&lt;/span&gt;&lt;span class='l-Scalar-Plain'&gt;mailer_host%&lt;/span&gt;
  &lt;span class='l-Scalar-Plain'&gt;port&lt;/span&gt;&lt;span class='p-Indicator'&gt;:&lt;/span&gt;           &lt;span class='err'&gt;%&lt;/span&gt;&lt;span class='l-Scalar-Plain'&gt;mailer_port%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After applying mentioned changes and rebuilding the cache application will send emails via &lt;code&gt;SMTP&lt;/code&gt; server from &lt;em&gt;mailcatcher&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If you need to run it as a service with web interface accessible outside you need to run it in this way:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;nohup mailcatcher --http-ip 0.0.0.0 &amp;gt; /var/log/mailcatcher.log 2&amp;gt;&lt;span class='p'&gt;&amp;amp;&lt;/span&gt;1 &lt;span class='p'&gt;&amp;amp;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://mailcatcher.me/&quot;&gt;&lt;code&gt;mailcatcher&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
        <pubDate>Sun, 13 Apr 2014 16:00:00 +0200</pubDate>
        <link>http://www.afronski.pl/2014/04/13/useful-tools-mailcatcher.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/04/13/useful-tools-mailcatcher.html</guid>
      </item>
    
      <item>
        <title>Using JIRA from the command line</title>
        <description>&lt;h1 id=&quot;using__from_the_command_line&quot;&gt;Using &lt;code&gt;JIRA&lt;/code&gt; from the command line&lt;/h1&gt;

&lt;p&gt;If someone would like to automate some popular workflows related with &lt;code&gt;JIRA&lt;/code&gt; (like logging time related with code review or meetings) or just use it from command line, please look at &lt;a href=&quot;http://tebriel.github.io/jira-cli&quot;&gt;this tool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Installation:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;npm install -g jira-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then create a file inside your home directory called &lt;em&gt;&lt;code&gt;.jiraclirc.json&lt;/code&gt;&lt;/em&gt; with content:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='p'&gt;{&lt;/span&gt;
  &lt;span class='s2'&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;USERNAME&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
  &lt;span class='s2'&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;PASSWORD&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
  &lt;span class='s2'&gt;&amp;quot;host&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;address.to.jira.com&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
  &lt;span class='s2'&gt;&amp;quot;protocol&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;https:&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
  &lt;span class='s2'&gt;&amp;quot;port&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='mi'&gt;443&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
  &lt;span class='s2'&gt;&amp;quot;strictSSL&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
  &lt;span class='s2'&gt;&amp;quot;project&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;PROJECTID&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that you can log time with command specified below. In this case, it will prompt you to type a work log comment and amount of time spent with this activity e.g. &lt;em&gt;&lt;code&gt;1h&lt;/code&gt;&lt;/em&gt; (format like in corresponding dialog):&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;jira -w BLAHBLAH-111
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://tebriel.github.io/jira-cli/&quot;&gt;&lt;code&gt;jira-cli&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
        <pubDate>Wed, 02 Apr 2014 17:00:00 +0200</pubDate>
        <link>http://www.afronski.pl/2014/04/02/using-jira-from-the-command-line.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/04/02/using-jira-from-the-command-line.html</guid>
      </item>
    
      <item>
        <title>ssh2 - Node.js module of the week</title>
        <description>&lt;h2 id=&quot;__nodejs_module_of_the_week&quot;&gt;&lt;code&gt;ssh2&lt;/code&gt; - Node.js module of the week&lt;/h2&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;In this series of articles I would like to show interesting, sometimes solid, sometimes just working and really useful &lt;em&gt;Node.js&lt;/em&gt; modules which helps me in the last week (or earlier). Each post will describe a reason why I chosen this module, an API description or sample usage. It will also describe &lt;em&gt;health&lt;/em&gt; (in other words - what it supports and answer for question &lt;em&gt;“Is it actively developed?”&lt;/em&gt;) and &lt;em&gt;quality&lt;/em&gt; (documentation, tests and overall code quality).&lt;/p&gt;

&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;ssh2&lt;/code&gt; is a &lt;code&gt;SSH2&lt;/code&gt; client module written in pure JavaScript.&lt;/p&gt;

&lt;p&gt;In this case mentioned module helps me bootstrap the simple tool a while ago. The main goal of this tool is to automate create, download and upload a backup to &lt;code&gt;SFTP&lt;/code&gt; for &lt;em&gt;one-of-the-most-popular-services-for-project-management&lt;/em&gt; which in cheapest version does not provide an API for that.&lt;/p&gt;

&lt;p&gt;For the first part (&lt;em&gt;UI automation script&lt;/em&gt; which will create the backup and download an archive) I have used a &lt;em&gt;&lt;code&gt;node-chimera&lt;/code&gt;&lt;/em&gt; module (which I will describe in the next blog post) and for second part (&lt;em&gt;uploading previously downloaded &lt;code&gt;ZIP&lt;/code&gt; archive&lt;/em&gt; to two different &lt;code&gt;SFTP&lt;/code&gt; servers) I have used a &lt;em&gt;&lt;code&gt;ssh2&lt;/code&gt;&lt;/em&gt; module.&lt;/p&gt;

&lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt;

&lt;p&gt;In the most basic case you need only to &lt;em&gt;&lt;code&gt;require&lt;/code&gt;&lt;/em&gt; this module and create new connection. It is useful to use &lt;em&gt;domains&lt;/em&gt; for error handling, but it is not an obligatory practice.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='lineno'&gt; 1&lt;/span&gt; &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;fs&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;require&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;fs&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt;
&lt;span class='lineno'&gt; 2&lt;/span&gt;     &lt;span class='nx'&gt;util&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;require&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;util&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt;
&lt;span class='lineno'&gt; 3&lt;/span&gt;     &lt;span class='nx'&gt;domain&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;require&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;domain&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt;
&lt;span class='lineno'&gt; 4&lt;/span&gt; 
&lt;span class='lineno'&gt; 5&lt;/span&gt;     &lt;span class='nx'&gt;Connection&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;require&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;ssh2&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt;
&lt;span class='lineno'&gt; 6&lt;/span&gt; 
&lt;span class='lineno'&gt; 7&lt;/span&gt;     &lt;span class='nx'&gt;OptionsForSFTP&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 8&lt;/span&gt;       &lt;span class='nx'&gt;host&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;X.Y.Z.U&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt; 9&lt;/span&gt;       &lt;span class='nx'&gt;port&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='mi'&gt;22&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt;10&lt;/span&gt;       &lt;span class='nx'&gt;username&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;backup&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt;11&lt;/span&gt;       &lt;span class='c1'&gt;// password: &amp;quot;password&amp;quot;&lt;/span&gt;
&lt;span class='lineno'&gt;12&lt;/span&gt;       &lt;span class='nx'&gt;privateKey&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;fs&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;readFileSync&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;/path/to/privateKey&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='lineno'&gt;13&lt;/span&gt;     &lt;span class='p'&gt;};&lt;/span&gt;
&lt;span class='lineno'&gt;14&lt;/span&gt; 
&lt;span class='lineno'&gt;15&lt;/span&gt; &lt;span class='c1'&gt;// ...&lt;/span&gt;
&lt;span class='lineno'&gt;16&lt;/span&gt; 
&lt;span class='lineno'&gt;17&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='nx'&gt;uploadToSftpServer&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;options&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;fileName&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;callback&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt;18&lt;/span&gt;   &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;connection&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='nx'&gt;Connection&lt;/span&gt;&lt;span class='p'&gt;(),&lt;/span&gt;
&lt;span class='lineno'&gt;19&lt;/span&gt;       &lt;span class='nx'&gt;handler&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;domain&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;create&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
&lt;span class='lineno'&gt;20&lt;/span&gt; 
&lt;span class='lineno'&gt;21&lt;/span&gt;   &lt;span class='nx'&gt;handler&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;on&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;error&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt;22&lt;/span&gt;     &lt;span class='nx'&gt;console&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;error&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;Error occurred: %s&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;error&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;23&lt;/span&gt;     &lt;span class='nx'&gt;process&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;exit&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='o'&gt;-&lt;/span&gt;&lt;span class='mi'&gt;1&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;24&lt;/span&gt;   &lt;span class='p'&gt;});&lt;/span&gt;
&lt;span class='lineno'&gt;25&lt;/span&gt; 
&lt;span class='lineno'&gt;26&lt;/span&gt;   &lt;span class='c1'&gt;// Handling &amp;quot;error&amp;quot; event inside domain handler.&lt;/span&gt;
&lt;span class='lineno'&gt;27&lt;/span&gt;   &lt;span class='nx'&gt;handler&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;add&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;connection&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;28&lt;/span&gt; 
&lt;span class='lineno'&gt;29&lt;/span&gt;   &lt;span class='nx'&gt;connection&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;on&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;ready&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='p'&gt;()&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt;30&lt;/span&gt;     &lt;span class='nx'&gt;connection&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;sftp&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;handler&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;intercept&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;sftp&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt;31&lt;/span&gt;       &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;providedFileName&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;util&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;format&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;./%s&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;fileName&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;32&lt;/span&gt; 
&lt;span class='lineno'&gt;33&lt;/span&gt;       &lt;span class='nx'&gt;sftp&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;fastPut&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;providedFileName&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;providedFileName&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt;34&lt;/span&gt;                    &lt;span class='nx'&gt;handler&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;intercept&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;connection&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;end&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;bind&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;connection&lt;/span&gt;&lt;span class='p'&gt;)));&lt;/span&gt;
&lt;span class='lineno'&gt;35&lt;/span&gt;     &lt;span class='p'&gt;}));&lt;/span&gt;
&lt;span class='lineno'&gt;36&lt;/span&gt;   &lt;span class='p'&gt;});&lt;/span&gt;
&lt;span class='lineno'&gt;37&lt;/span&gt; 
&lt;span class='lineno'&gt;38&lt;/span&gt;   &lt;span class='nx'&gt;connection&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;on&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;end&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;callback&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;39&lt;/span&gt;   &lt;span class='nx'&gt;connection&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;connect&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;options&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;40&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When connection is &lt;em&gt;&lt;code&gt;ready&lt;/code&gt;&lt;/em&gt; we need to open a &lt;em&gt;&lt;code&gt;SFTP&lt;/code&gt;&lt;/em&gt; channel and &lt;em&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/em&gt; file to the server. As you can see in example presented above, authentication via password or private key is a piece of cake and it is handled by module internals.&lt;/p&gt;

&lt;h3 id=&quot;health&quot;&gt;Health&lt;/h3&gt;

&lt;p&gt;Module is under active development, bugs are quickly resolved. Besides bug fixing and merging pull requests author incrementally improves design and code quality.&lt;/p&gt;

&lt;p&gt;It is supported on &lt;em&gt;Node.js&lt;/em&gt; version &lt;code&gt;0.8&lt;/code&gt; and higher (probably also on &lt;code&gt;0.11&lt;/code&gt; because it does not have any kind of binary extensions).&lt;/p&gt;

&lt;h3 id=&quot;quality&quot;&gt;Quality&lt;/h3&gt;

&lt;p&gt;Unfortunately &lt;em&gt;module is not&lt;/em&gt; an any kind of reference in terms of quality:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;It does not have any kind of tests&lt;/em&gt; (unit or even integration tests).&lt;/li&gt;

&lt;li&gt;Documentation is delivered inside single &lt;em&gt;&lt;code&gt;README.md&lt;/code&gt;&lt;/em&gt; file in form of source code examples.&lt;/li&gt;

&lt;li&gt;Overall code quality is not too high, module still makes an impression of &lt;em&gt;hacked&lt;/em&gt; in the hurry.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But it works and it has just a few bugs :wink:.&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mscdex/ssh2&quot;&gt;&lt;code&gt;ssh2&lt;/code&gt; github page&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
        <pubDate>Tue, 04 Feb 2014 23:00:00 +0100</pubDate>
        <link>http://www.afronski.pl/2014/02/04/ssh2-nodejs-module-of-the-week.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/02/04/ssh2-nodejs-module-of-the-week.html</guid>
      </item>
    
      <item>
        <title>Reconciling cat and dog - the most productive git-svn setup</title>
        <description>&lt;h2 id=&quot;reconciling_cat_and_dog__the_most_productive__setup&quot;&gt;Reconciling cat and dog - the most productive &lt;em&gt;&lt;code&gt;git-svn&lt;/code&gt;&lt;/em&gt; setup&lt;/h2&gt;

&lt;p&gt;I would like to present productive and effective setup for the &lt;em&gt;&lt;code&gt;git-svn&lt;/code&gt;&lt;/em&gt; bridge which removes most of the obstacles and fixes some problems which occur with this &lt;em&gt;bridged&lt;/em&gt; approach.&lt;/p&gt;

&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;Before we start - one remark: if you installed &lt;em&gt;&lt;code&gt;git&lt;/code&gt;&lt;/em&gt; on your machine first time ever, please remember about setting up proper user, email and &lt;em&gt;one-more-thing just for convinience&lt;/em&gt;:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;git config --global user.name &lt;span class='s2'&gt;&amp;quot;Your Name Here&amp;quot;&lt;/span&gt;
~ &lt;span class='nv'&gt;$ &lt;/span&gt;git config --global user.email &lt;span class='s2'&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;
~ &lt;span class='nv'&gt;$ &lt;/span&gt;git config --global credential.helper cache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;starting&quot;&gt;Starting&lt;/h3&gt;

&lt;p&gt;At first, you need to &lt;code&gt;clone&lt;/code&gt; (or &lt;code&gt;checkout&lt;/code&gt; in SVN terminology) repository. You can do in three different ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First way (&lt;em&gt;2nd line&lt;/em&gt;) checkouts repository with a standard SVN layout (&lt;code&gt;trunk&lt;/code&gt;, &lt;code&gt;branches&lt;/code&gt;, &lt;code&gt;tags&lt;/code&gt;) and associates branches, tags and &lt;em&gt;&lt;code&gt;trunk&lt;/code&gt;&lt;/em&gt; with &lt;em&gt;&lt;code&gt;git&lt;/code&gt;&lt;/em&gt; &lt;em&gt;&lt;code&gt;master&lt;/code&gt;&lt;/em&gt;.&lt;/li&gt;

&lt;li&gt;Second way (&lt;em&gt;5th line&lt;/em&gt;) checkouts whole repository as it is.&lt;/li&gt;

&lt;li&gt;Third way (&lt;em&gt;starts in 8th line&lt;/em&gt;) is really an expansion for &lt;code&gt;git-svn clone&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='lineno'&gt; 1&lt;/span&gt; &lt;span class='c'&gt;# Standard layout.&lt;/span&gt;
&lt;span class='lineno'&gt; 2&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn clone -s &lt;span class='nv'&gt;$SVN_REPOSITORY_ROOT_URL&lt;/span&gt;
&lt;span class='lineno'&gt; 3&lt;/span&gt; 
&lt;span class='lineno'&gt; 4&lt;/span&gt; &lt;span class='c'&gt;# Non-standard layout.&lt;/span&gt;
&lt;span class='lineno'&gt; 5&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn clone &lt;span class='nv'&gt;$SVN_REPOSITORY_ROOT_URL&lt;/span&gt;
&lt;span class='lineno'&gt; 6&lt;/span&gt; 
&lt;span class='lineno'&gt; 7&lt;/span&gt; &lt;span class='c'&gt;# &amp;#39;git svn clone ...&amp;#39; is basically a shortcut for these commands:&lt;/span&gt;
&lt;span class='lineno'&gt; 8&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;mkdir REPOSITORY
&lt;span class='lineno'&gt; 9&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;&lt;span class='nb'&gt;cd &lt;/span&gt;REPOSITORY
&lt;span class='lineno'&gt;10&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn init &lt;span class='nv'&gt;$SVN_REPOSITORY_TRUNK_URL&lt;/span&gt; .
&lt;span class='lineno'&gt;11&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn fetch -r HEAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;updating_and_commiting&quot;&gt;Updating and commiting&lt;/h3&gt;

&lt;p&gt;Besides &lt;code&gt;pull&lt;/code&gt; and &lt;code&gt;push&lt;/code&gt; (or &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;commit&lt;/code&gt; in SVN terminology) everything works like in classical &lt;em&gt;&lt;code&gt;git&lt;/code&gt;&lt;/em&gt;. First line represents &lt;em&gt;&lt;code&gt;svn update&lt;/code&gt;&lt;/em&gt; command, second - series of &lt;code&gt;svn commit&lt;/code&gt; commands with messages collected inside local &lt;em&gt;&lt;code&gt;git&lt;/code&gt;&lt;/em&gt; repository.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='lineno'&gt;1&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn rebase
&lt;span class='lineno'&gt;2&lt;/span&gt; ~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn dcommit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;ignores&quot;&gt;Ignores&lt;/h3&gt;

&lt;p&gt;If you cannot store your &lt;em&gt;&lt;code&gt;.gitignore&lt;/code&gt;&lt;/em&gt; file in the SVN repository you can exclude these files locally:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn show-ignore &amp;gt;&amp;gt; .git/info/exclude
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But &lt;code&gt;.gitignore&lt;/code&gt; file can be very convenient - you can easily share exclusions with other members of the team which also use this bridged approach. &lt;em&gt;Moreover&lt;/em&gt;, this command is really slow for bigger repositories, so that is another advantage of having this file.&lt;/p&gt;

&lt;h3 id=&quot;branches&quot;&gt;Branches&lt;/h3&gt;

&lt;p&gt;If your repository does not have standard layout you can still easily associate SVN branch in your &lt;em&gt;&lt;code&gt;.git/config&lt;/code&gt;&lt;/em&gt; by adding new &lt;em&gt;&lt;code&gt;svn-remote&lt;/code&gt;&lt;/em&gt; section:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='o'&gt;[&lt;/span&gt;svn-remote &lt;span class='s2'&gt;&amp;quot;sample_branch&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt;
    &lt;span class='nv'&gt;url&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; https://svn_repository/branches/sample_branch
    &lt;span class='nv'&gt;fetch&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; :refs/remotes/sample_branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you should run (and &lt;em&gt;develop the habit of running&lt;/em&gt;):&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn fetch --fetch-all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As the last step, you need to &lt;em&gt;&lt;code&gt;checkout&lt;/code&gt;&lt;/em&gt; new branch:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;git checkout -b sample_branch remotes/sample_branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that your branch will be available like normal &lt;em&gt;&lt;code&gt;git&lt;/code&gt;&lt;/em&gt; branch. Remember that your &lt;em&gt;&lt;code&gt;trunk&lt;/code&gt;&lt;/em&gt; is actually a &lt;em&gt;&lt;code&gt;git&lt;/code&gt;&lt;/em&gt; &lt;em&gt;&lt;code&gt;master&lt;/code&gt;&lt;/em&gt; branch.&lt;/p&gt;

&lt;h3 id=&quot;removing_empty_directories&quot;&gt;Removing empty directories&lt;/h3&gt;

&lt;p&gt;Regarding the &lt;em&gt;&lt;code&gt;git-svn&lt;/code&gt;&lt;/em&gt; bridge, dangling empty directories are my nightmare. Fortunately, someone thought about it and we can enable deleting empty directories on commit (&lt;em&gt;globally&lt;/em&gt; via &lt;em&gt;&lt;code&gt;git-config&lt;/code&gt;&lt;/em&gt; or &lt;em&gt;on demand&lt;/em&gt; just for certain commit):&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;git config svn.rmdir &lt;span class='nb'&gt;true&lt;/span&gt;
~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn dcommit --rmdir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;problems&quot;&gt;Problems&lt;/h3&gt;

&lt;p&gt;There are still a few problems with the newest SVN clients for such combination. The most annoying is &lt;em&gt;assertion … failed&lt;/em&gt; related to the renaming operation. This error looks like this example:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn dcommit
Committing to http://...
    C      path/to/file/a.js &lt;span class='o'&gt;=&lt;/span&gt;&amp;gt; other/path/to/file/b.js
assertion &lt;span class='s2'&gt;&amp;quot;svn_fspath__is_canonical(child_fspath)&amp;quot;&lt;/span&gt; failed: file &lt;span class='s2'&gt;&amp;quot;dirent_uri.c&amp;quot;&lt;/span&gt;, line 2502, &lt;span class='k'&gt;function&lt;/span&gt;: svn_fspath__skip_ancestor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At first glance you may think that the only (and the &lt;em&gt;worst possible&lt;/em&gt; - lost information and mess in history) option is to split your commit into two. Happily, you can perform your commit normally but you need to turn off rename detection:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;~ &lt;span class='nv'&gt;$ &lt;/span&gt;git svn dcommit -C1 -l1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately you will still commit two changes, this time in one batch (as a &lt;em&gt;deletion the old file&lt;/em&gt; and &lt;em&gt;creation file with the new name&lt;/em&gt;), instead of just a file rename, so you will still loose information in the process.&lt;/p&gt;

&lt;p&gt;To avoid this completely the only option is to downgrade SVN client to the latest version on &lt;em&gt;&lt;code&gt;1.7.X&lt;/code&gt;&lt;/em&gt; branch.&lt;/p&gt;

&lt;h3 id=&quot;credits&quot;&gt;Credits&lt;/h3&gt;

&lt;p&gt;Big thanks to &lt;a href=&quot;https://twitter.com/skremiec&quot;&gt;@skremiec&lt;/a&gt; for undeceiving me in some cases and pointing out &lt;em&gt;&lt;code&gt;svn.rmdir&lt;/code&gt;&lt;/em&gt; option :wink:.&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-svn.html&quot;&gt;Manual for &lt;code&gt;git-svn&lt;/code&gt; on kernel.org&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://git-scm.com/book/en/Git-and-Other-Systems-Git-and-Subversion&quot;&gt;Chapter about &lt;code&gt;git-svn&lt;/code&gt; in &lt;code&gt;Pro Git&lt;/code&gt; book&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
        <pubDate>Sat, 25 Jan 2014 23:00:00 +0100</pubDate>
        <link>http://www.afronski.pl/2014/01/25/reconciling-cat-and-dog-the-most-productive-git-svn-setup.html</link>
        <guid isPermaLink="true">http://www.afronski.pl/2014/01/25/reconciling-cat-and-dog-the-most-productive-git-svn-setup.html</guid>
      </item>
    
  </channel>
</rss>